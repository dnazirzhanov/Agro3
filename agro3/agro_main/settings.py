"""
Django settings for agro_main project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
try:
    import dj_database_url  # optional, used only when DATABASE_URL is set
except Exception:
    dj_database_url = None

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load environment variables from .env file
try:
    from dotenv import load_dotenv
    # Explicitly specify the .env file path
    env_path = BASE_DIR / '.env'
    load_dotenv(dotenv_path=env_path)
except ImportError:
    pass  # dotenv not installed


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# In production, set this via environment variable
SECRET_KEY = os.getenv("SECRET_KEY", "django-insecure-p^+zq2855yb-st(4=ul52n9x0@1bl3i31_#)&cq2@v9%%mq0cr")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG", "True").lower() in ['true', '1', 'yes']

ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "localhost,127.0.0.1,[::1],0.0.0.0,testserver").split(",")

# CSRF trusted origins for production deployments
CSRF_TRUSTED_ORIGINS = os.getenv("CSRF_TRUSTED_ORIGINS", "").split(",") if os.getenv("CSRF_TRUSTED_ORIGINS") else []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'modeltranslation',  # Must come before apps with translations
    'ckeditor',
    'ckeditor_uploader',
    'locations.apps.LocationsConfig',
    'users.apps.UsersConfig',
    'crops',
    'pests_diseases',
    'market',
    'soil',
    'forum',
    'weather',
    'agro_supplies',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",  # Added for i18n
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "agro_main.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / 'templates'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "django.template.context_processors.i18n",  # Added for i18n
            ],
        },
    },
]

WSGI_APPLICATION = "agro_main.wsgi.application"


# Database (Azure/Cloud ready)
DATABASE_URL = os.getenv("DATABASE_URL", "")
if DATABASE_URL:
    DATABASES = {
        "default": dj_database_url.parse(DATABASE_URL, conn_max_age=600, ssl_require=True)
    }
else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en"

# Supported languages for the platform
LANGUAGES = [
    ('en', 'English'),
    ('ru', 'Русский'),  # Russian
    ('ky', 'Кыргызча'),  # Kyrgyz
]

# Path where translation files will be stored
LOCALE_PATHS = [
    BASE_DIR / 'locale',
]

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/


# Static files
STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_DIRS = [BASE_DIR / "static"] if (BASE_DIR / "static").exists() else []

# Media files

# Media files (Azure Blob optional)
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"
if os.getenv("AZURE_ACCOUNT_NAME") and os.getenv("AZURE_ACCOUNT_KEY") and os.getenv("AZURE_MEDIA_CONTAINER"):
    DEFAULT_FILE_STORAGE = "storages.backends.azure_storage.AzureStorage"
    AZURE_ACCOUNT_NAME = os.getenv("AZURE_ACCOUNT_NAME")
    AZURE_ACCOUNT_KEY = os.getenv("AZURE_ACCOUNT_KEY")
    AZURE_CONTAINER = os.getenv("AZURE_MEDIA_CONTAINER")

# CKEditor Configuration
CKEDITOR_UPLOAD_PATH = 'uploads/'
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'full',
        'height': 400,
        'width': '100%',
        'extraPlugins': ','.join([
            'uploadimage',
            'image2',
        ]),
        'uploadUrl': '/ckeditor/upload/',
        'image2_alignClasses': ['image-align-left', 'image-align-center', 'image-align-right'],
        'image2_captionedClass': 'image-captioned',
        'removePlugins': 'image',  # Remove old image plugin in favor of image2
        'stylesSet': [
            {'name': 'Disease Image', 'element': 'img', 'attributes': {'class': 'agricultural-image disease-image'}},
            {'name': 'Pest Image', 'element': 'img', 'attributes': {'class': 'agricultural-image pest-image'}},
            {'name': 'Crop Image', 'element': 'img', 'attributes': {'class': 'agricultural-image'}},
            {'name': 'Full Width Image', 'element': 'img', 'attributes': {'class': 'img-fluid'}},
        ],
        'contentsCss': [
            '/static/css/ckeditor-custom.css'
        ],
    },
    'agricultural': {
        'toolbar': [
            ['Bold', 'Italic', 'Underline'],
            ['NumberedList', 'BulletedList'],
            ['Link', 'Unlink'],
            ['Image', 'Table'],
            ['Styles', 'Format'],
            ['Source']
        ],
        'height': 500,
        'width': '100%',
        'extraPlugins': ','.join([
            'uploadimage',
            'image2',
        ]),
        'uploadUrl': '/ckeditor/upload/',
        'image2_alignClasses': ['image-align-left', 'image-align-center', 'image-align-right'],
        'image2_captionedClass': 'image-captioned',
        'removePlugins': 'image',
        'stylesSet': [
            {'name': 'Disease/Symptom Photo', 'element': 'img', 'attributes': {'class': 'agricultural-image disease-image'}},
            {'name': 'Pest/Insect Photo', 'element': 'img', 'attributes': {'class': 'agricultural-image pest-image'}},
            {'name': 'Crop/Plant Photo', 'element': 'img', 'attributes': {'class': 'agricultural-image'}},
            {'name': 'Treatment Result', 'element': 'img', 'attributes': {'class': 'agricultural-image treatment-image'}},
        ],
        'format_tags': 'p;h2;h3;h4',
        'contentsCss': [
            '/static/css/ckeditor-custom.css'
        ],
    }
}

# Authentication Settings
LOGIN_URL = 'users:login'
LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = 'home'

# Email Settings (for password reset, etc.)
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # For development

# Weather API Configuration
# Get your free API key from https://openweathermap.org/api
OPENWEATHER_API_KEY = '4f767064463296c602c6ddd6903a7db6'

# Session Settings
SESSION_COOKIE_AGE = 60 * 60 * 24 * 7  # 1 week
SESSION_SAVE_EVERY_REQUEST = True

# Security Settings for Production
if not DEBUG:
    # HTTPS/SSL settings
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    
    # HSTS (HTTP Strict Transport Security)
    SECURE_HSTS_SECONDS = 31536000  # 1 year
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    
    # Additional security headers
    SECURE_CONTENT_TYPE_NOSNIFF = True
    SECURE_BROWSER_XSS_FILTER = True
    X_FRAME_OPTIONS = 'DENY'
else:
    # Development settings
    SECURE_SSL_REDIRECT = False
    SESSION_COOKIE_SECURE = False
    CSRF_COOKIE_SECURE = False

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
