# Generated by Django 5.2.6 on 2025-09-29 10:47

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("forum", "0004_blogpost_featured_video_blogpost_youtube_url_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Like",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "blog_post",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes",
                        to="forum.blogpost",
                    ),
                ),
                (
                    "comment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes",
                        to="forum.comment",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "constraints": [
                    models.UniqueConstraint(
                        condition=models.Q(("blog_post__isnull", False)),
                        fields=("user", "blog_post"),
                        name="unique_post_like",
                    ),
                    models.UniqueConstraint(
                        condition=models.Q(("comment__isnull", False)),
                        fields=("user", "comment"),
                        name="unique_comment_like",
                    ),
                    models.CheckConstraint(
                        condition=models.Q(
                            models.Q(
                                ("blog_post__isnull", False), ("comment__isnull", True)
                            ),
                            models.Q(
                                ("blog_post__isnull", True), ("comment__isnull", False)
                            ),
                            _connector="OR",
                        ),
                        name="like_either_post_or_comment",
                    ),
                ],
            },
        ),
    ]
